#BlueJ class context
comment0.target=Crypto
comment1.params=username\ password
comment1.target=java.lang.String\ hashPassword(java.lang.String,\ java.lang.String)
comment10.params=
comment10.target=javax.crypto.spec.IvParameterSpec\ generateIVector()
comment11.params=input\ key\ iv
comment11.target=java.lang.String\ encryptAes(java.lang.String,\ javax.crypto.SecretKey,\ javax.crypto.spec.IvParameterSpec)
comment12.params=cipherText\ key\ iv
comment12.target=java.lang.String\ decryptAes(java.lang.String,\ javax.crypto.SecretKey,\ javax.crypto.spec.IvParameterSpec)
comment13.params=key\ iv
comment13.target=java.lang.String\ encodeAesBundle(java.lang.String,\ java.lang.String)
comment14.params=aesBundle
comment14.target=java.lang.String\ decodeAesBundleKey(java.lang.String)
comment15.params=aesBundle
comment15.target=java.lang.String\ decodeAesBundleIv(java.lang.String)
comment2.params=
comment2.target=java.security.KeyPair\ generateRsaKeys()
comment3.params=input\ publicKey
comment3.target=java.lang.String\ encryptRsa(java.lang.String,\ java.security.PublicKey)
comment4.params=input\ privateKey
comment4.target=java.lang.String\ decryptRsa(java.lang.String,\ java.security.PrivateKey)
comment5.params=key
comment5.target=java.lang.String\ encodeKey(java.security.Key)
comment6.params=input
comment6.target=java.security.PublicKey\ decodePublicKey(java.lang.String)
comment7.params=input
comment7.target=java.security.PrivateKey\ decodePrivateKey(java.lang.String)
comment8.params=keyPair
comment8.target=void\ printKeyPair(java.security.KeyPair)
comment9.params=
comment9.target=javax.crypto.SecretKey\ generateAesKey()
numComments=16
